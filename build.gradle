buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
		classpath 'de.undercouch:gradle-download-task:3.2.0'
	}
}

// Because Forge is too stupid to fix Deprecation Issues, and we cannot fix it on our end! (until we fork Forge)
allprojects {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:deprecation"
	}
}

apply plugin: 'eclipse'
eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

apply plugin: 'idea'
idea{
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

apply plugin: 'forge'

version = "0.0.0"
group = "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modid"

minecraft {
	version = "1.7.10-10.13.4.1614-1.7.10"
	runDir = "eclipse"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
compileJava.options.bootClasspath = org.gradle.internal.jvm.Jvm.current().getJre().getHomeDir().toString() +"/lib/rt.jar"

repositories {
	maven {
		name = "gt"
		url = "http://gregtech.overminddl1.com/"
	}
	/* Optional other repo's, not needed for the below listed optional dependencies
	maven {
		name = "OC repo"
		url = "http://maven.cil.li/"
	}
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
	maven {
		name = "jabba"
		url = "http://default.mobiusstrip.eu/maven"
	}
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven/"
	}
	maven {
		name = "Apple"
		url "http://www.ryanliptak.com/maven/"
	}
	ivy {
		name "BuildCraft"
		artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision](-[classifier]).[ext]"
	}
	*/
}

dependencies {
	// `compile` means it is both compiled with and run with `run*`
	// `compileOnly` means it is only used to compile with but not run in dev via run*
	compile "com.gregoriust.gregtech:gregtech_1.7.10:6.09.00:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
	compileOnly "appeng:appliedenergistics2:rv3-beta-6:dev"
	compileOnly "applecore:AppleCore:1.7.10-3.1.1:deobf"
	compileOnly "ic2:IC2Classic:1.2.1.8:dev"
	compileOnly "micdoodle8.mods:GalacticraftCore:1.7-3.0.12.504:Dev"
	compileOnly "micdoodle8.mods:MicdoodleCore:1.7-3.0.12.504:Dev"
	//compile fileTree(dir: 'libs', include: '*.jar') // If you use this, don't commit them to VCS
	//compileOnly "appeng:appliedenergistics2:rv3-beta-6:dev"
	//compileOnly "applecore:AppleCore:1.7.10-3.1.1:deobf"
	//compileOnly "binnie:binnie-mods:1.7.10-2.0.22:dev"
	//compileOnly "blusunrize:ImmersiveEngineering:0.7.7:deobf"
	//compileOnly "climateControl:ClimateControl:0.6.61" // Hack
	//compileOnly "climateControl:ClimateControl:0.8.2" // Hack
	//compileOnly "climateControl:climateControl:0.6.beta59:dev" // Does nothing but compiles successfully
	//compileOnly "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	//compileOnly "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	//compileOnly "codechicken:ForgeMultipart:1.7.10-1.2.0.347:dev"
	//compileOnly "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
	//compileOnly "cofh:CoFHCore:1.7.10R3.0.4:dev"
	//compileOnly "cofh:CoFHLib:1.7.10R3.0.3:dev"
	//compileOnly "com.InfinityRaider.AgriCraft:AgriCraft:1.7.10-1.5.0:dev"
	//compileOnly "com.amadornes.framez:Framez:1.7.10-0.2-33:deobf"
	//compileOnly "com.amadornes.jtraits:JTraits:0.1"
	//compileOnly "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"
	//compileOnly "com.bioxx.tfc:TerraFirmaCraft_1.7.10:0.79.28.908:deobf"
	//compileOnly "com.bluepowermod:BluePower:1.7.10-0.2.963:deobf"
	//compileOnly "com.builtbroken:ICBM:1.7.10-2.15.5b514:deobf-dev"
	//compileOnly "com.builtbroken:VoltzEngine:1.7.10-1.11.0b466:deobf"
	//compileOnly "com.carpentersblocks:CarpentersBlocks:3.3.8.2:dev"
	//compileOnly "com.chocolate.chocolateQuest:chocolateQuest:1.7.10-1.1d" // Hack
	//compileOnly "com.creativemd:craftingmanager:0.7.6:dev"
	//compileOnly "com.creativemd:creativecore:1.3.24:dev"
	//compileOnly "com.gregoriust.gregtech:gregtech_1.7.10:6.09.00:dev"
	//compileOnly "com.mod-buildcraft:buildcraft:7.1.23:dev"
	//compileOnly "com.rwtema.funkylocomotion:funky-locomotion-1.7.10:beta-7:deobf"
	//compileOnly "com.wayoftime.bloodmagic:BloodMagic:1.7.10-1.3.3-18:deobf"
	//compileOnly "com.xcompwiz:mystcraft:1.7.10-0.12.3.04:dev"
	//compileOnly "dan200.computercraft:ComputerCraft:1.75" // Hack
	//compileOnly "delvr.streams:Streams:1.7.10-0.3.4:deobf"
	//compileOnly "enviromine:EnviroMine:1.3.124:deobf"
	//compileOnly "extracells:ExtraCells:1.7.10-2.3.14b200:deobf"
	//compileOnly "ic2:IC2Classic:1.2.1.8:dev"
	//compileOnly "java.moze_intel:ProjectE:1.7.10-PE1.10.1:dev"
	//compileOnly "li.cil.oc:OpenComputers:MC1.7.10-1.7.2.1204:dev"
	//compileOnly "mcp.mobius.waila:Waila:1.5.10_1.7.10:dev"
	//compileOnly "mekanism:MekanismAll:1.7.10-9.1.1.283:dev"
	//compileOnly "micdoodle8.mods:Galacticraft-Planets:1.7-3.0.12.504:Dev"
	//compileOnly "micdoodle8.mods:GalacticraftCore:1.7-3.0.12.504:Dev"
	//compileOnly "micdoodle8.mods:MicdoodleCore:1.7-3.0.12.504:Dev"
	//compileOnly "minechem:Minechem:1.7.10-6.0.407:dev"
	//compileOnly "minetweaker:MineTweaker3:1.7.10-3.0.10:dev-full"
	//compileOnly "mods.railcraft:Railcraft_1.7.10:9.12.3.0:dev"
	//compileOnly "mrtjp:ForgeRelocation:0.0.1.4:dev"
	//compileOnly "mrtjp:MrTJPCore:1.1.0.34:dev"
	//compileOnly "mrtjp:ProjectRed:1.7.10-4.7.0pre11.52:dev"
	//compileOnly "net.bdew:bdlib:1.9.4.110-mc1.7.10:dev"
	//compileOnly "net.bdew:gendustry:1.6.4-133-mc1.7.10:dev"
	//compileOnly "net.machinemuse:ModularPowersuits:1.7.10-0.11.1.114" // Hack
	//compileOnly "net.machinemuse:Numina:0.4.1.105" // Hack
	//compileOnly "net.sengir.forestry:forestry_1.7.10:4.2.16.64:dev"
	//compileOnly "openblocks:OpenBlocks:1.7.10-1.6-1.7.10:deobf"
	//compileOnly "openmods:OpenModsLib:1.7.10-0.10:deobf"
	//compileOnly "pneumaticCraft:PneumaticCraft:1.7.10-1.12.7-153:userdev"
	//compileOnly "powercrystals:MineFactoryReloaded:[1.7.10]2.8.2B1-201:dev"
	//compileOnly "qmunity:QmunityLib:0.2.118:deobf"
	//compileOnly "santa:hairy-spice:0.1:dev"
	//compileOnly "team.chisel.ctmlib:CTMLib:MC1.7.10-1.4.1.5:deobf"
	//compileOnly "team.chisel:Chisel:2.9.5.12:deobf"
	//compileOnly "thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev"
	//compileOnly "ttftcuts.atg:ATG:1.7.10-0.12.0:DEV"
	//compileOnly "twilightforest:twilightforest:1.7.10-2.3.8dev:dev"
	//compileOnly "vazkii.botania:Botania:r1.8-250:deobf"

	// real example
	//compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

	// for more info...
	// http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
	// http://www.gradle.org/docs/current/userguide/dependency_management.html
}


processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

task buildInfo {
	def cmd = "git rev-parse --short HEAD"
	def proc = cmd.execute()
	proc.waitFor()
	if (proc.exitValue() == 0) {
		ext.revision = proc.text.trim()
	} else {
		ext.revision = "GITBORK"
	}

	if (System.getenv().BUILD_NUMBER != null) {
		ext.buildNum = "${System.getenv().BUILD_NUMBER}"
	} else {
		def date = new Date().format('yyyyMMddHHmmss')
		ext.buildNum = "DEV.${date}.${project.buildInfo.revision}"
	}
}

ext.artifact_version = 'NFG'
if (System.getenv().ARTIFACT_VERSION == null) {
	artifact_version = "${project.buildInfo.buildNum}"
} else {
	artifact_version = "${System.getenv().ARTIFACT_VERSION}"
}

version = "${version}-${artifact_version}"

task devJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'dev'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier = 'sources'
}

artifacts {
	archives devJar
	archives sourcesJar
}
